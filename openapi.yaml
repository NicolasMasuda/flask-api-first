openapi: 3.0.3
info:
  title: APIFirst Flask con Validación de Usuarios
  version: 1.0.0
  description: API con validación automática usando OpenAPI

servers:
  - url: http://127.0.0.1:5000
    description: Servidor local de desarrollo

paths:
  /hello:
    get:
      summary: Endpoint de prueba hello world
      operationId: helloWorld
      responses:
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello World!"

  /users:
    post:
      operationId: createUser
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - age
                - email
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 50
                  example: "Juan Pérez"
                age:
                  type: integer
                  minimum: 18
                  maximum: 100
                  example: 25
                email:
                  type: string
                  format: email
                  example: "juan@ejemplo.com"
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  details:
                    type: string
  /users/{id}:
    get:
      operationId: getUserById
      summary: Obtener un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  details:
                    type: string
    post:
      operationId: updateUser
      summary: Actualizar un usuario existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 50
                  example: "Juan Pérez Actualizado"
                age:
                  type: integer
                  minimum: 18
                  maximum: 100
                  example: 26
                email:
                  type: string
                  format: email
                  example: "juan.actualizado@ejemplo.com"
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  age:
                    type: integer
                  email:
                    type: string
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  details:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  details:
                    type: string